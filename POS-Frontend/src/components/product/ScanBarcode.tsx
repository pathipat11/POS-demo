import React, { useState } from "react";
import { getProductByBarcode } from "../../api/product/productApi.ts"; // import API
import { BrowserBarcodeReader } from "@zxing/library";
import "../../styles/product/BarcodeUploader.css"; // ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏ü‡∏•‡πå CSS

const BarcodeUploader = () => {
  const [barcode, setBarcode] = useState("");
  const [product, setProduct] = useState<any | null>(null);
  const [error, setError] = useState<string | null>(null);

  const handleImageUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const file = event.target?.files?.[0];
    if (!file) return;

    const reader = new FileReader();

    reader.onload = async () => {
      const imageData = reader.result;
      if (typeof imageData !== "string") {
        console.error("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
        return;
      }

      const codeReader = new BrowserBarcodeReader();
      try {
        const result = await codeReader.decodeFromImage(undefined, imageData);
        setBarcode(result.getText()); // ‡πÉ‡∏ä‡πâ `.getText()` ‡πÅ‡∏ó‡∏ô `.text`
      } catch (error) {
        console.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πÅ‡∏Å‡∏ô‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î:", error);
        alert("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡πà‡∏≤‡∏ô‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏ä‡πâ‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏Ñ‡∏°‡∏ä‡∏±‡∏î‡∏Ç‡∏∂‡πâ‡∏ô");
      }
    };

    reader.readAsDataURL(file);
  };

  const fetchProductByBarcode = async () => {
    try {
      const data = await getProductByBarcode(barcode); // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å barcode
      setProduct(data);
      setError(null);
    } catch (error) {
      setError("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö");
      setProduct(null);
    }
  };

  return (
    <div className="barcode-uploader-container">
      <h1 className="title">üì∏ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏™‡πÅ‡∏Å‡∏ô‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î</h1>
      <input type="file" accept="image/*" onChange={handleImageUpload} className="file-input" />

      {barcode && (
        <div className="barcode-result">
          <p>üìå ‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î‡∏ó‡∏µ‡πà‡∏û‡∏ö: <strong>{barcode}</strong></p>
          <button onClick={fetchProductByBarcode} className="search-button">üîç ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</button>
        </div>
      )}

      {error && <p className="error-message">{error}</p>}

      {product && (
        <div className="product-details">
          <h2>üì¶ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h2>
          <p><strong>‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:</strong> {product.name}</p>
          <p><strong>‡∏£‡∏≤‡∏Ñ‡∏≤:</strong> {product.price} ‡∏ö‡∏≤‡∏ó</p>
          <p><strong>‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î:</strong> {product.description}</p>
        </div>
      )}
    </div>
  );
};

export default BarcodeUploader;
