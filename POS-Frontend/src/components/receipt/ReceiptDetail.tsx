import { useEffect, useState } from "react";
import { useParams } from "react-router-dom";
import { fetchReceiptById } from "../../api/receipt/receiptApi.ts";
import "../../styles/receipt/ReceiptDetail.css";
import React from "react";

interface Item {
    barcode: string;
    name: string;
    price: number;
    quantity: number;
    subtotal: number;
    _id: string;
}

interface Receipt {
    _id: string;
    paymentId: string;
    employeeName: string;
    items: Item[];
    totalPrice: number;
    paymentMethod: string;
    amountPaid: number;
    changeAmount: number;
    timestamp: string;
}

export default function ReceiptDetail() {
    const { paymentId } = useParams<{ paymentId?: string }>(); // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ paymentId ‡πÄ‡∏õ‡πá‡∏ô undefined
    const [receipt, setReceipt] = useState<Receipt | null>(null);
    const [loading, setLoading] = useState<boolean>(true);
    const [error, setError] = useState<string | null>(null);

    useEffect(() => {
        if (!paymentId) {
            setError("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à");
            setLoading(false);
            return;
        }

        const getReceiptDetail = async () => {
            try {
                const response = await fetchReceiptById(paymentId);
                console.log(response);
                setReceipt(response);
            } catch (err) {
                setError(err instanceof Error ? err.message : "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
            } finally {
                setLoading(false);
            }
        };

        getReceiptDetail();
    }, [paymentId]);

    return (
        <div className="receipt-detail-container">
            <h1 className="receipt-detail-title">üßæ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÉ‡∏ö‡πÄ‡∏™‡∏£‡πá‡∏à</h1>

            {loading && <p className="receipt-loading">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>}
            {error && <p className="receipt-error">{error}</p>}

            {!loading && !error && receipt && (
                <div className="receipt-info">
                    <p><strong>‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô:</strong> {receipt.employeeName ?? "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</p>
                    <p><strong>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°:</strong> {receipt.totalPrice?.toLocaleString() ?? "0"} ‡∏ö‡∏≤‡∏ó</p>
                    <p><strong>‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô:</strong> {receipt.paymentMethod ?? "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</p>
                    <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡∏à‡πà‡∏≤‡∏¢:</strong> {receipt.amountPaid?.toLocaleString() ?? "0"} ‡∏ö‡∏≤‡∏ó</p>
                    <p><strong>‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏≠‡∏ô:</strong> {receipt.changeAmount?.toLocaleString() ?? "0"} ‡∏ö‡∏≤‡∏ó</p>
                    <p><strong>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà:</strong> {receipt.timestamp ? new Date(receipt.timestamp).toLocaleString() : "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</p>


                    <h2>üõí ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h2>
                    <table className="receipt-item-table">
                        <thead>
                            <tr>
                                <th>‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
                                <th>‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</th>
                                <th>‡∏£‡∏≤‡∏Ñ‡∏≤/‡∏´‡∏ô‡πà‡∏ß‡∏¢</th>
                                <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô</th>
                                <th>‡∏£‡∏≤‡∏Ñ‡∏≤‡∏£‡∏ß‡∏°</th>
                            </tr>
                        </thead>
                        <tbody>
                            {receipt?.items && receipt.items.length > 0 ? (
                                receipt.items.map((item, index) => (
                                    <tr key={item._id ?? index}>
                                        <td>{index + 1}</td>
                                        <td>{item.name ?? "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</td>
                                        <td>{item.price?.toLocaleString() ?? "0"} ‡∏ö‡∏≤‡∏ó</td>
                                        <td>{item.quantity ?? "0"}</td>
                                        <td>{item.subtotal?.toLocaleString() ?? "0"} ‡∏ö‡∏≤‡∏ó</td>
                                    </tr>
                                ))
                            ) : (
                                <tr>
                                    <td colSpan={5}>‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</td>
                                </tr>
                            )}
                        </tbody>

                    </table>
                </div>
            )}
        </div>
    );
}
