import React, { useState, useEffect } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { getStockData } from "../../api/stock/stock.ts";
import { getProductByBarcode } from "../../api/product/productApi.ts";
import "../../styles/stock/StockDetailPage.css";

const StockDetail: React.FC = () => {
    const { barcode } = useParams<{ barcode: string }>();
    const navigate = useNavigate();

    const [product, setProduct] = useState<any>(null);
    const [stock, setStock] = useState<any>(null);
    const [loading, setLoading] = useState<boolean>(true);
    const [error, setError] = useState<string | null>(null);

    useEffect(() => {
        const fetchData = async () => {
            if (!barcode) {
                setError("‚ùå No barcode provided");
                setLoading(false);
                return;
            }

            const token = localStorage.getItem("token");
            if (!token) {
                setError("‚ùå No token found");
                setLoading(false);
                return;
            }

            try {
                // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏™‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
                const [productData, stockData] = await Promise.all([
                    getProductByBarcode(barcode),
                    getStockData(token)
                ]);

                if (productData) {
                    setProduct(productData);
                    const stockItem = stockData?.find((item: any) => item.barcode === barcode);
                    setStock(stockItem || { quantity: "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ï‡πá‡∏≠‡∏Å" });
                } else {
                    setError("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ");
                }
            } catch (err) {
                setError("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•");
            } finally {
                setLoading(false);
            }
        };

        fetchData();
    }, [barcode]);

    if (loading) return <p className="loading-stockDetail">‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î...</p>;
    if (error) return <p className="error-message-stockDetail">{error}</p>;

    return (
        <div className="stock-detail-container">
            <h2 className="stock-detail-header">üì¶ ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤</h2>
            {product ? (
                <div className="stock-detail-card">
                    <img src={product.imageUrl} alt={product.name} className="product-image-stockDetail" />
                    <h3 className="product-name-stockDetail">{product.name}</h3>
                    <p className="product-info-stockDetail"><strong>‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î:</strong> {product.barcode || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏"}</p>
                    <p className="product-info-stockDetail"><strong>‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà:</strong> {product.category}</p>
                    <p className="product-info-stockDetail"><strong>‡∏£‡∏≤‡∏Ñ‡∏≤:</strong> {product.price} ‡∏ö‡∏≤‡∏ó</p>
                    <p className="product-info-stockDetail"><strong>‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠:</strong> {stock?.quantity || "‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•"}</p>

                    {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ */}
                    <div className="stock-detail-buttons">
                        <button 
                            className="back-button-stockDetail" 
                            onClick={() => navigate(-1)}>
                                ‚¨ÖÔ∏è ‡∏Å‡∏•‡∏±‡∏ö
                        </button>

                        <button 
                            className="import-button-stockDetail" 
                            onClick={() => navigate(`/createOrder`)}
                        >
                            üì• ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà
                        </button>
                        <button 
                            className="edit-button-stockDetail" 
                            onClick={() => navigate(`/edit/${barcode}`)}
                        >
                            ‚úèÔ∏è ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
                        </button>
                    </div>

                </div>
            ) : (
                <p className="error-message-stockDetail">‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ö‡∏≤‡∏£‡πå‡πÇ‡∏Ñ‡πâ‡∏î‡∏ô‡∏µ‡πâ</p>
            )}
        </div>
    );
};

export default StockDetail;
