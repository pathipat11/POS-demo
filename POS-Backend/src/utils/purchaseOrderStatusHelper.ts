import PurchaseOrder from "../models/PurchaseOrder";
import StockLot from "../models/StockLot";

/* ========================================================
   ‚öôÔ∏è updatePurchaseOrderStatus
   ‚Üí ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á‡πÉ‡∏ö PO ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥
   ‡πÉ‡∏ä‡πâ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å QC ‡πÄ‡∏™‡∏£‡πá‡∏à ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß
======================================================== */
export const updatePurchaseOrderStatus = async (poId: string): Promise<void> => {
    try {
        const po = await PurchaseOrder.findById(poId).populate("stockLots");
        if (!po) return;

        const lots = po.stockLots as any[];

        // ‚úÖ ‡πÅ‡∏¢‡∏Å‡∏•‡πá‡∏≠‡∏ï‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô / ‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô / ‡∏ú‡πà‡∏≤‡∏ô‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô
        const failLots = lots.filter(
            (l) => l.qcStatus === "‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô" || l.qcStatus === "‡∏ú‡πà‡∏≤‡∏ô‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô"
        );
        const passedLots = lots.filter((l) => l.qcStatus === "‡∏ú‡πà‡∏≤‡∏ô");

        const allFailReturned =
            failLots.length > 0 && failLots.every((l) => l.returnStatus?.includes("‡∏Ñ‡∏∑‡∏ô"));

        /* ========================================================
           üß© Logic ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ PO ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πá‡∏≠‡∏ï‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        ========================================================= */
        if (failLots.length > 0 && passedLots.length > 0) {
            // ‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô
            if (allFailReturned) {
                po.status = "‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô QC - ‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏•‡πâ‡∏ß";
            } else {
                po.status = "‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô QC - ‡∏£‡∏≠‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤";
            }
            po.qcStatus = "‡∏ú‡πà‡∏≤‡∏ô‡∏ö‡∏≤‡∏á‡∏™‡πà‡∏ß‡∏ô";
        } else if (failLots.length > 0 && passedLots.length === 0) {
            // ‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            if (allFailReturned) {
                po.status = "‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô QC - ‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß";
            } else {
                po.status = "‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô QC - ‡∏£‡∏≠‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤";
            }
            po.qcStatus = "‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô";
        } else if (passedLots.length > 0 && failLots.length === 0) {
            // ‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            po.status = "QC ‡∏ú‡πà‡∏≤‡∏ô";
            po.qcStatus = "‡∏ú‡πà‡∏≤‡∏ô";
        } else {
            // ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏ß‡∏à QC
            po.status = "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß";
            po.qcStatus = "‡∏£‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö";
        }

        po.updatedAt = new Date();
        await po.save();

        console.log(`‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ PO ${po.purchaseOrderNumber} ‚Üí ${po.status}`);
    } catch (error) {
        console.error("‚ùå Error updating PO status:", (error as Error).message);
    }
};
